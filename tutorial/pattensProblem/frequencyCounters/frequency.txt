-uses objects or sets to collect values/frequencies of elements.
-often to avoid nested loops or o(n^2)with arrays/strings .

#Aplications
1 .Anagram. -1 counter
2.Duplicates- use 1 counter
3.compare similarity of inputs i.e arrays/strings a)values.
                                                  b)frequency 
                                                  c)is subsequence.

-For comapring similarities use create counters for each input being compared.

-usually o(n) instead of o(n^2)quadratic
-
important : object consist of key(element in arr) ,value(frequency/number of appearance)
 note:
  for in:  iterates over keys.
 for of : iterates over values.

 just by the ways
  var arr = [3, 5, 7];
arr.foo = "hello";
    
for (var i in arr) {
  console.log(i); // logs "0", "1", "2", "foo"
}
    
for (var i of arr) {
  console.log(i); // logs "3", "5", "7"
  // it doesn't log "3", "5", "7", "hello"
}

#Applications
1.anagrams
2.if members one array ,double those of another.
3.consist of same digits.
4.Duplicates : any arg 
              -function tkes specified number of params.

summary of
 #frequncy counter for arrays 
1.check if param length are equal.
2.create counters using val of arr
3.Loop thru keys of counter.
  4//check if keys in 2nd param meet expectations.
   5//check if counter frequncies are equal.
6.output   

#frequncy counter for strings
1.check if param length are equal.
2.create counter- using char of string1
3.loop thru chars of str2.
  //4.check if letter exist in counter.
  //5.if false return false ,else decrement counter 
6.output 