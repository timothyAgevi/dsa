objectives
1.define algorithm.
2.Plan to solve algorithm.
3.compare and contrast problem solving patterns: frequency counters,two pointer problems and divide and conquer
#improved
1.plan for solving problems with.
2.master common problem solving patterns - for each category of problem solving patterns

# #problem solving 
 #1.Understand problem.
e.g Write a function that takes 2 numbers and returns their sum
1-can restate problem inmy own words.
"implementate addition"
2-inputs to prolem.
INTS?float?
3-output from solution.-
int,float ,string?
4-can outputs be determined from inputs.
5-how to label data part of this problem.-terminologies

# 2.Explore concrete examples.
example:Write a function that takes in string and returns counts of each character in the string.
-simple e.g. charCount("aaa")//{a:4},charCount("Hello")//{h:1,e:1,l:2,o:1}
-complex e.g. charCount( "Hello hi")
-e.g with empty inputs. charCount( " ")
-e,g with invalid inputs

 #3.Break it down.
 
#4.solve or simplify.
#5.look back n refactor.
